<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>co.icesi.pdaily</groupId>
    <artifactId>pdaily-server</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <properties>
        <codename>relieved-turtle</codename>
        <full.version>${project.version} / ${codename} / ${maven.build.timestamp}</full.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <maven.javadoc.skip>true</maven.javadoc.skip>
        <version.synekus.framework>2020.523.1128</version.synekus.framework>
        <version.postgresql>42.2.12</version.postgresql>
        <version.flyway>6.5.0</version.flyway>
        <version.jboss-vfs>3.2.15.Final</version.jboss-vfs>
        <version.quarkus>1.7.2.Final</version.quarkus>
        <version.awaitility>4.0.2</version.awaitility>
        <version.jacoco>0.8.5</version.jacoco>
        <version.jakarta-ejb>3.2.6</version.jakarta-ejb>
        <version.javax-cache>1.1.1</version.javax-cache>
        <version.hibernate-types>2.9.9</version.hibernate-types>
        <version.rest-assured>4.2.0</version.rest-assured>
        <sonar.host.url>https://qa.haruk.co</sonar.host.url>
        <sonar.login>25a7012c135c8252ab9a1e93df5afa5bdeb6ee36</sonar.login>
        <sonar.jacoco.reportPaths>
            target/jacoco/jacoco-ut.exec, target/jacoco/jacoco-it.exec
        </sonar.jacoco.reportPaths>
    </properties>
    <repositories>
        <repository>
            <id>HARUK</id>
            <url>https://pkgs.dev.azure.com/HARUK/_packaging/HARUK/maven/v1</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>
    <distributionManagement>
        <repository>
            <id>HARUK</id>
            <url>https://pkgs.dev.azure.com/HARUK/_packaging/HARUK/maven/v1</url>
        </repository>
        <snapshotRepository>
            <id>HARUK</id>
            <url>https://pkgs.dev.azure.com/HARUK/_packaging/HARUK/maven/v1</url>
        </snapshotRepository>
    </distributionManagement>
    <dependencies>
        <dependency>
            <groupId>jakarta.ejb</groupId>
            <artifactId>jakarta.ejb-api</artifactId>
            <version>${version.jakarta-ejb}</version>
        </dependency>
        <dependency>
            <groupId>javax.cache</groupId>
            <artifactId>cache-api</artifactId>
            <version>${version.javax-cache}</version>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${version.postgresql}</version>
        </dependency>
        <dependency>
            <groupId>com.vladmihalcea</groupId>
            <artifactId>hibernate-types-52</artifactId>
            <version>${version.hibernate-types}</version>
        </dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
            <version>${version.flyway}</version>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>${version.rest-assured}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.synekus</groupId>
            <artifactId>synekus-framework</artifactId>
            <version>${version.synekus.framework}</version>
        </dependency>
        <dependency>
            <groupId>org.jboss</groupId>
            <artifactId>jboss-vfs</artifactId>
            <version>${version.jboss-vfs}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.jboss.logging</groupId>
                    <artifactId>jboss-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.synekus</groupId>
            <artifactId>testing-framework</artifactId>
            <version>${version.synekus.framework}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>${version.awaitility}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <profiles>
        <profile>
            <id>format</id>
            <activation>
                <property>
                    <name>!no-format</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>net.revelc.code.formatter</groupId>
                        <artifactId>formatter-maven-plugin</artifactId>
                        <version>2.11.0</version>
                        <executions>
                            <execution>
                                <id>format-source</id>
                                <goals>
                                    <goal>format</goal>
                                </goals>
                                <phase>process-sources</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>net.revelc.code</groupId>
                        <artifactId>impsort-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>format-imports</id>
                                <goals>
                                    <goal>sort</goal>
                                </goals>
                                <phase>process-sources</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>validate</id>
            <activation>
                <property>
                    <name>no-format</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>net.revelc.code.formatter</groupId>
                        <artifactId>formatter-maven-plugin</artifactId>
                        <version>2.11.0</version>
                        <executions>
                            <execution>
                                <id>check-source-format</id>
                                <goals>
                                    <goal>validate</goal>
                                </goals>
                                <phase>process-sources</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>net.revelc.code</groupId>
                        <artifactId>impsort-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>check-imports-sort</id>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                                <phase>process-sources</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>local</id>
            <activation>
                <property>
                    <name>!no-local</name>
                </property>
            </activation>
            <properties>
                <test.port>8180</test.port>
                <jdbc.url>jdbc:postgresql://localhost/icesipdaily</jdbc.url>
            </properties>
        </profile>
        <profile>
            <id>ci</id>
            <properties>
                <test.port>8080</test.port>
                <jdbc.url>jdbc:postgresql://psql-server/icesipdaily</jdbc.url>
            </properties>
        </profile>
        <profile>
            <id>jacoco-online</id>
            <activation>
                <property>
                    <name>!no-jacoco</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <configuration>
                            <append>true</append>
                        </configuration>
                        <executions>
                            <execution>
                                <id>agent-for-ut</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                                <configuration>
                                    <destFile>${project.build.directory}/jacoco/jacoco-ut.exec</destFile>
                                </configuration>
                            </execution>
                            <execution>
                                <id>after-unit-test-execution</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                                <configuration>
                                    <dataFile>${project.build.directory}/jacoco/jacoco-ut.exec</dataFile>
                                    <outputDirectory>
                                        ${project.reporting.outputDirectory}/jacoco-ut
                                    </outputDirectory>
                                </configuration>
                            </execution>
                            <execution>
                                <id>agent-for-it</id>
                                <goals>
                                    <goal>prepare-agent-integration</goal>
                                </goals>
                                <configuration>
                                    <propertyName>jacoco.agent.itArgLine</propertyName>
                                    <destFile>
                                        ${project.build.directory}/jacoco/jacoco-it.exec
                                    </destFile>
                                </configuration>
                            </execution>
                            <execution>
                                <id>after-integration-test-execution</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>report-integration</goal>
                                </goals>
                                <configuration>
                                    <dataFile>${project.build.directory}/jacoco/jacoco-it.exec</dataFile>
                                    <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
                                </configuration>
                            </execution>
                            <execution>
                                <id>merge-unit-and-integration</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>merge</goal>
                                </goals>
                                <configuration>
                                    <fileSets>
                                        <fileSet>
                                            <directory>${project.build.directory}/jacoco/</directory>
                                            <includes>
                                                <include>*.exec</include>
                                            </includes>
                                        </fileSet>
                                    </fileSets>
                                    <destFile>${project.build.directory}/jacoco/merged.exec</destFile>
                                </configuration>
                            </execution>
                            <execution>
                                <id>create-merged-report</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                                <configuration>
                                    <dataFile>${project.build.directory}/jacoco/merged.exec</dataFile>
                                    <outputDirectory>
                                        ${project.reporting.outputDirectory}/jacoco-merged
                                    </outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>quarkus</id>
            <activation>
                <property>
                    <name>!no-quarkus</name>
                </property>
            </activation>
            <properties>
                <test.port>8080</test.port>
                <test.context>/</test.context>
            </properties>
            <dependencyManagement>
                <dependencies>
                    <dependency>
                        <groupId>io.quarkus</groupId>
                        <artifactId>quarkus-bom</artifactId>
                        <version>${version.quarkus}</version>
                        <type>pom</type>
                        <scope>import</scope>
                    </dependency>
                </dependencies>
            </dependencyManagement>
            <dependencies>
                <dependency>
                    <groupId>io.quarkus</groupId>
                    <artifactId>quarkus-rest-client</artifactId>
                </dependency>
                <dependency>
                    <groupId>io.quarkus</groupId>
                    <artifactId>quarkus-resteasy-jsonb</artifactId>
                </dependency>
                <dependency>
                    <groupId>io.quarkus</groupId>
                    <artifactId>quarkus-hibernate-orm</artifactId>
                </dependency>
                <dependency>
                    <groupId>io.quarkus</groupId>
                    <artifactId>quarkus-oidc</artifactId>
                </dependency>
                <dependency>
                    <groupId>io.quarkus</groupId>
                    <artifactId>quarkus-elytron-security-properties-file</artifactId>
                </dependency>
                <dependency>
                    <groupId>io.quarkus</groupId>
                    <artifactId>quarkus-junit5</artifactId>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.quarkus</groupId>
                        <artifactId>quarkus-maven-plugin</artifactId>
                        <version>${version.quarkus}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.6.0</version>
                        <executions>
                            <execution>
                                <id>start-server</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <skip>${skipTests}</skip>
                                </configuration>
                            </execution>
                        </executions>
                        <configuration>
                            <executable>java</executable>
                            <async>true</async>
                            <arguments>
                                <argument>${jacoco.agent.itArgLine}</argument>
                                <argument>-Dquarkus.profile=test</argument>
                                <argument>-jar</argument>
                                <argument>${project.build.directory}/${project.build.finalName}-runner.jar</argument>
                            </arguments>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.gmaven</groupId>
                        <artifactId>groovy-maven-plugin</artifactId>
                        <version>2.1.1</version>
                        <executions>
                            <execution>
                                <id>########### Waiting for Quarkus to be available ############</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <classpathScope>test</classpathScope>
                                    <properties>
                                        <test.port>${test.port}</test.port>
                                        <test.context>${test.context}</test.context>
                                    </properties>
                                    <source>${project.basedir}/src/test/script/wait_quarkus.groovy</source>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <build>
        <finalName>pdaily-server</finalName>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>net.revelc.code.formatter</groupId>
                    <artifactId>formatter-maven-plugin</artifactId>
                    <version>2.11.0</version>
                    <configuration>
                        <configFile>${project.basedir}/src/ide-config/code-style.xml</configFile>
                        <skip>${format.skip}</skip>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>net.revelc.code</groupId>
                    <artifactId>impsort-maven-plugin</artifactId>
                    <version>1.4.1</version>
                    <configuration>
                        <groups>java.,javax.,org.,com.,co.</groups>
                        <staticGroups>*</staticGroups>
                        <skip>${format.skip}</skip>
                        <removeUnused>true</removeUnused>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${version.jacoco}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>3.0.0-M4</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                            <configuration>
                                <parallel>classes</parallel>
                                <runOrder>random</runOrder>
                                <argLine>@{jacoco.agent.itArgLine}</argLine>
                                <includes>
                                    <include>**IT</include>
                                </includes>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.0.0-M4</version>
                    <configuration>
                        <parallel>classes</parallel>
                        <runOrder>random</runOrder>
                        <systemProperties>
                            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                        </systemProperties>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.2.0</version>
                    <configuration>
                        <archive>
                            <manifestEntries>
                                <Built-By>Synekus Release Manager</Built-By>
                                <Implementation-Title>${project.name}</Implementation-Title>
                                <Implementation-Version>${full.version}</Implementation-Version>
                                <Implementation-Vendor-Id>com.synekus</Implementation-Vendor-Id>
                                <Implementation-Vendor>${project.organization.name}</Implementation-Vendor>
                            </manifestEntries>
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.1</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>3.7.0.1746</version>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/resources/</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/META-INF/services/*.*</include>
                    <include>**/*.json</include>
                    <include>**/*.xml</include>
                    <include>**/*.yml</include>
                    <include>**/*.sql</include>
                    <include>**/*.properties</include>
                </includes>
                <excludes>
                    <exclude>**/demo/**</exclude>
                </excludes>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.json</include>
                    <include>**/*.xml</include>
                    <include>**/*.sql</include>
                    <include>**/*.properties</include>
                    <include>**/*.txt</include>
                </includes>
            </testResource>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>false</filtering>
                <includes>
                    <include>**/*.war</include>
                    <include>**/*.jar</include>
                </includes>
            </testResource>
        </testResources>
    </build>
</project>